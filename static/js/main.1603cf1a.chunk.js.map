{"version":3,"sources":["components/PlayerList.js","components/TeamLogo.js","components/TeamCard.js","constants/teams.js","components/Chart.js","util/chartData.js","components/Multiples.js","components/InfoBox.js","components/BulletList.js","constants/bullets.js","components/FetchCovidData.js","App.js","index.js"],"names":["PlayerList","team","rawData","listRef","useRef","useEffect","current","scrollIntoView","behavior","block","inline","teamData","useMemo","nest","key","d","team_id","object","weeks","week","sortKeys","a","b","entries","className","ref","map","players","values","player","name","position","TeamLogo","imgProps","src","process","alt","TeamCard","useState","isOpen","setIsOpen","onClick","width","height","NFL_TEAM_LOGOS","Chart","data","xScale","yScale","path","line","x","y","fill","strokeWidth","stroke","margin","getTeams","teamCounts","Object","keys","getYScale","currentMaximum","counts","Math","max","scaleLinear","domain","range","getChartData","push","Multiples","tooltipDate","setTooltipDate","cases_data","total","row","weekExtent","extent","teamObj","i","getTeamCounts","derived","teams","scalePoint","showTooltip","event","bounds","target","getBoundingClientRect","clientX","left","eachBand","step","index","round","val","hideTooltip","tooltipX","onMouseMove","onMouseOut","chartWidth","style","fontWeight","fontSize","textAnchor","undefined","x1","y1","x2","y2","strokeDasharray","find","chartHeight","InfoBox","header","description","BulletList","items","item","multiplesBullets","logoBullets","href","deserializer","first","last","FetchCovidData","setError","setRawData","isFetching","setIsFetching","csv","then","catch","err","length","App","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1603cf1a.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react'\nimport '../css/PlayerList.css'\nimport { nest } from 'd3-collection'\n\nexport function PlayerList({ team, rawData }) {\n  const listRef = useRef()\n\n  useEffect(() => {    \n    if (listRef.current) {\n      listRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'nearest'\n      })\n    }\n  }, [])\n\n  const teamData = useMemo(() => \n    nest()\n      .key(d => d.team_id)\n      .object(rawData)[team],\n      [rawData, team]\n  )\n\n  const weeks = useMemo(() =>\n    nest()\n      .key(d => +d.week)\n      .sortKeys((a, b) => a - b)\n      .entries(teamData),\n      [teamData]\n  )\n  \n\n  return (\n    <div className='list' ref={listRef}>\n      {weeks.map(({key: week, values: players}) =>\n        <div key={week}>\n          <h3>{week > 0 ? `Week ${week}` : 'Preseason'}</h3>\n          <ul>\n            {players.map(player =>\n              <li key={player.name}>{`${player.name} (${player.position})`}</li>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\n","import React from 'react'\nimport '../css/TeamLogo.css'\n\nexport function TeamLogo({ team, ...imgProps }) {\n  \n  return (\n    <>\n      <img \n        {...imgProps}  \n        src={`${process.env.PUBLIC_URL}/logos/${team}.svg`} \n        alt={team}\n      />\n    </>\n  )\n\n}\n","import React, { useState } from 'react'\nimport { PlayerList } from './PlayerList'\nimport { TeamLogo } from './TeamLogo'\nimport '../css/TeamCard.css'\n\nexport function TeamCard({ team, rawData }) {\n  const [isOpen, setIsOpen] = useState(false)\n  \n  const toggleOpen = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <div className='card'>\n      <div onClick={toggleOpen}>\n        <TeamLogo \n          team={team} \n          width='200px' \n          height='200px'\n        />\n      </div>\n      {isOpen && <PlayerList team={team} rawData={rawData} />}\n    </div>\n  )\n}\n","\nexport const NFL_TEAM_LOGOS = [\n  'BUF', \n  'MIA', \n  'NE', \n  'NYJ', \n  'BAL',\n  'CIN', \n  'CLE', \n  'PIT', \n  'HOU',\n  'IND', \n  'TEN', \n  'JAX',\n  'DEN',\n  'KC',\n  'LV', \n  'LAC', \n  'DAL', \n  'NYG', \n  'PHI',\n  'WAS',\n  'CHI', \n  'DET', \n  'GB', \n  'MIN',\n  'ATL',\n  'CAR', \n  'NO', \n  'TB',\n  'ARI',\n  'LA', \n  'SF',\n  'SEA'\n]","import React from 'react'\nimport { line } from 'd3-shape'\n\nexport function Chart ({ data, xScale, yScale }) {\n  const path = line().x(d => xScale(d[0])).y(d => yScale(d[1])) \n  // console.log(data)\n  return (\n    <>\n      <path\n        d={path(data)}\n        fill='none'\n        strokeWidth='3'\n        stroke='steelblue'\n      />​\n    </>\n  )\n} ","import { scaleLinear } from 'd3-scale'\nimport { extent } from 'd3-array'\n\nexport const height = 250\nexport const margin = {top: 50, right: 50, bottom: 50, left: 50}\n\n\nexport function getTeams(teamCounts) {\n  return [...Object.keys(teamCounts)] \n}\n\nexport function getTeamCounts(cases_data) {\n  // { total: { {week: 0, caseCount: 100}}, TEN: {{week: 0, caseCount: 100}, ...}, ...}\n  let nest = {total: {}}\n\n  for (let row of cases_data) {\n    if (!nest.total[row.week]) nest.total[row.week] = 0; \n    nest.total[row.week]++; //nest = { total: {0: 5, 4: 10, ...} }\n\n    // if the team doesn't exist in the nest, add it\n    if (!nest[row.team_id]) nest[row.team_id] = {}; //nest = { KC: {}, SF: {}, ... }\n    // if the week number doesn't exist in the (nest) team, add it\n    if (!nest[row.team_id][row.week]) nest[row.team_id][row.week] = 0;\n    // increment the case count for that team, for that week\n    nest[row.team_id][row.week]++; //nest = { KC: {0: 5, 1: 10}, SF: {0: 3, 1: 5},... }\n  }\n\n  //fill in missing week numbers (keys)\n  const weekExtent = extent(\n    Object.keys(nest.total),\n    d => +d\n  )\n  //iterate through every team in the nest and add the missing week numbers\n  for (let team in nest) {  \n    const teamObj = nest[team]\n    for (let i = weekExtent[0]; i < weekExtent[1] + 1; i++) {\n      if (!teamObj[i]) teamObj[i] = 0; // if the week number doesn't exist in the team obj, add it\n    }\n  }\n\n  return nest\n}\n\n\nexport function getYScale(teamCounts) {\n  let currentMaximum = 0\n\n  for (let team in teamCounts) {\n    if (team === 'total') {\n      continue\n      // currentMaximum = max(Object.values(teamCounts.total))\n    } else {\n      // get the counts for all weeks for the team\n      const counts = Object.values(teamCounts[team]) //teamCounts[team] = {0: 1, 1: 0, 2: 0, 3: 0, 4: 1, 5: 0, 6: 1, 7: 0, 8: 0, 9: 1, 10: 4, ...}\n      const teamMax = Math.max(...counts, currentMaximum)\n      currentMaximum = teamMax\n    }\n  }\n\n  // console.log(currentMaximum)\n\n  // use the value that we found in the scale\n  return scaleLinear()\n    .domain([0, currentMaximum])\n    .range([height - margin.bottom, margin.top])\n}\n\nexport function getChartData(teamCounts) {\n  const data = []\n  for (let team in teamCounts) {\n    if (team === 'total') continue; \n    // console.log(team)\n    data.push({ team: team, data: Object.entries(teamCounts[team]) })\n  }\n  return data\n}","//TODO: dont fetch in here, pass from above\n\nimport React, { useState, useMemo } from 'react'\nimport { scalePoint } from 'd3-scale'\nimport { Chart } from './Chart'\nimport {getTeamCounts, getTeams, getYScale, getChartData, height, margin} from '../util/chartData.js'\n\nconst chartHeight = 250\nconst chartWidth = 250\n\nexport function Multiples({ rawData }) {\n  const [tooltipDate, setTooltipDate] = useState(null)\n  \n  const teamCounts = useMemo(() => {\n    if (!rawData) return;\n    return getTeamCounts(rawData)\n  }, [rawData])\n\n  //xScale domain: [\"0\", \"1\", ...\"14\"], range: [50, 200] \n  //yScale domain: [0, 18], range: [200, 50]\n\n  const derived = useMemo(() => {\n    if (!teamCounts) return;\n\n    return {\n      teams: getTeams(teamCounts),\n      xScale: scalePoint().domain(Object.keys(teamCounts.total)).range([margin.left, height - margin.right]),\n      yScale: getYScale(teamCounts),\n      teamData: getChartData(teamCounts)\n    }\n  }, [teamCounts])\n\n  // console.log(derived.teamData.map(({data}) => data.map(d => d[0])))\n  \n \n  if (!derived) return 'Loading'\n  // console.log(Math.ceil(derived.teamData.length / numChartsPerRow) * chartHeight)\n\n  const showTooltip = event => {\n    const bounds = event.target.getBoundingClientRect()\n    const x = event.clientX - bounds.left - margin.left\n\n    // https://stackoverflow.com/a/38746923\n    const eachBand = derived.xScale.step()\n    const index = Math.round((x / eachBand))\n    const val = derived.xScale.domain()[index]\n\n    // console.log(derived.xScale.domain())\n\n    // console.log('tooltip', val)\n    setTooltipDate(val)\n  }\n\n  const hideTooltip = () => setTooltipDate(null)\n\n  const tooltipX = tooltipDate && derived.xScale(tooltipDate)\n  // console.log(tooltipX)\n\n  return (\n    <>\n      <div className='chart-grid'>\n        {derived.teamData && derived.teamData.map(({team, data}) => \n          <svg width={chartWidth} height={chartHeight}\n            onMouseMove={showTooltip}\n            onMouseOut={hideTooltip}\n            key={team}\n          >\n            <text\n              x={chartWidth / 2}\n              y={margin.top}\n              style={{fontWeight: 'bold', fontSize: '1.25em', textAnchor: 'middle'}}\n            >\n              {team}\n            </text>\n            <Chart\n              data={data}\n              xScale={derived.xScale}\n              yScale={derived.yScale}\n            />\n            {tooltipDate !== null && tooltipDate !== undefined &&\n              <g>\n                <line\n                  x1={tooltipX}\n                  y1={margin.top}\n                  x2={tooltipX}\n                  y2={chartHeight - margin.bottom}\n                  style={{stroke: '#999', strokeDasharray: 5}}\n                />\n                <text\n                  x={tooltipX + 5}\n                  y={derived.yScale(data.find(d => d[0] === tooltipDate)[1])}\n                  style={{fill: '#000', fontWeight: 'bold', fontSize: '1.15em'}}\n                >\n                  {data.find(d => d[0] === tooltipDate)[1]}\n                </text>\n                <text\n                  x={chartWidth / 2}\n                  y={chartHeight - 10}\n                  style={{fontSize: '0.75em', textAnchor: 'middle'}}\n                >\n                  {`Week ${data.find(d => d[0] === tooltipDate)[0]}`}\n                </text>\n              </g>\n            }\n          </svg>\n        )}\n    </div>\n  </>\n  )\n}","//TODO: add a ul for 'some quick facts'\nimport React from 'react'\n\nexport function InfoBox({ header, description }) {\n  return (\n    <>\n      <h3>{header}</h3>\n      <p>\n        {description}\n      </p>\n    </>\n  )\n}","import React from 'react'\nimport '../css/BulletList.css'\n\nexport function BulletList({ items }) {\n  return (\n    <ul>\n      {items.map((item, i) => <li key={i}>{item}</li>)}\n    </ul>\n  )\n}\n\n","import React from 'react'\n\n// TODO: programmatic way of calculating statistics\nexport const multiplesBullets = ['As there were no strict covid protocols in the pre-season (week 0), we can see a huge spike before the regular season begins and the protocols are put in place', 'Also notice that there\\'s no reported cases for any team during weeks 1-3, perhaps due to teams being extra cautious in the early portion of the season', 'There was a correlation between high pre-season case counts and teams who were located in states that struggled with the pandemic. However, some of these teams were able to buck the trend throughout the season and keep cases quite low (Jacksonville, Miami, and Atlanta among others)', 'Ultimately, Baltimore led all teams with 18 cases for a single week and 34 cases overall, while Seattle and Washington had the least amount of overall cases with 2']\n\nexport const logoBullets = [<span>As a result of placing 3 Quarterbacks on the list, the Broncos had to start a Wide Receiver from their practice squad at Quarterback in <a href=\"https://www.espn.com/nfl/recap?gameId=401220215\">Week 12</a></span>, <span>Similarly, the Browns top 4 Wide Receivers were placed on the list in <a href=\"https://www.espn.com/nfl/recap?gameId=401220145\">Week 16</a>, resulting in a loss to the 1-win Jets</span>]\n","import React, { useState, useEffect } from 'react'\nimport '../css/TeamLogo.css'\nimport { csv } from 'd3-fetch'\nimport { TeamCard } from './TeamCard'\nimport { NFL_TEAM_LOGOS } from '../constants/teams'\nimport { Multiples } from './Multiples'\nimport { InfoBox } from './InfoBox'\nimport { BulletList } from './BulletList'\nimport { multiplesBullets, logoBullets } from '../constants/bullets'\n// import useFetchData from './useFetchData'\n\nconst url = './data/nfl_covid.csv' //in public/\n\nconst deserializer = d => {\n\n  return {\n    ...d,\n    name: `${d.first} ${d.last}`\n  }\n}\n\nexport function FetchCovidData() {\n  const [error, setError] = useState(false)\n  const [rawData, setRawData] = useState(null)\n  const [isFetching, setIsFetching] = useState(true)\n\n  useEffect(() => {\n    csv(url, deserializer)\n      .then(data => {\n        setIsFetching(false)\n        setRawData(data)\n      })\n      .catch(err => {\n        setIsFetching(false)\n        setError(err)\n      })\n  }, [])\n\n  if (isFetching) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <>\n      {rawData &&\n        <>\n          <InfoBox \n            header='Team Counts by Week' \n            description={`There was a reported total of ${rawData.length} cases (pre-season and regular season). The charts below show each teams cases on a weekly basis. Hover over the charts to see the counts for that week.`} \n          />\n          <BulletList items={multiplesBullets} />\n          <Multiples rawData={rawData} />\n          <InfoBox \n            header='Player Lists by Team'\n            description='A main concern was the occurence of an entire positional group being placed on the list, a couple of teams experienced this... the games went about as well as you would imagine. Click on the logos to see the players who were placed on the COVID list of their respective teams.' \n          />\n          <BulletList items={logoBullets} />\n          <div className='logo-grid'>\n            {NFL_TEAM_LOGOS.map(team => <TeamCard team={team} key={team} rawData={rawData} />)}\n          </div>\n        </>\n      }\n    </>\n  )\n}","import React from 'react';\nimport './App.css';\n// import { InfoBox } from './components/InfoBox';\nimport { FetchCovidData } from './components/FetchCovidData';\n\nfunction App() {\n  return (\n    <div className='App' style={{ margin: '40px' }}>  \n      <span className='header' role='img' aria-label='covid-cases'>NFL COVID CASES🏈</span>\n      <p>\n        For the 2020-21 season, the NFL created a COVID-19 Reserve List that was defined as any player who had tested positive, or been in close contact with someone who had tested positive for the coronavirus. While no games were cancelled by season's end, the pandemic left a profound impact across the league that resulted in postponements, high-profile players missing games, and concerns over how the virus affects long-term health. \n      </p>\n      <FetchCovidData />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}